function solution(n, m) {
  // 최대공약수: 두 수의 공통되는 약수 중에서 가장 큰 수
  // 최소공배수: 두 수의 공통되는 배수 중에서 가장 작은 수

  // 최대공약수
  let max = 0;
  for (let i = 1; i <= m; i++) {
    if (n % i === 0 && m % i === 0) {
      max = i;
    }
  }

  // 최소공배수
  let min = 0;
  for (let i = m; i <= n * m; i += m) {
    if (i % n === 0) {
      min = i;
      break;
    }
  }
  return [max, min];
}

// function solution(n, m) {
//     // 유클리드 호제법
//     // 최대공약수를 구하기 위한 공식, 알고리즘

//     // 1. a를 b로 나우었을 때 (a < b, 큰 수를 더 작은 수로 나누었을 때)
//     // 나머지 값은 c
//     // 2. c가 0이라면 b가 최대공약수
//     // 3. c가 0이 아니라면 b를 c로 나눈다. (1번 과정부터 반복)

//     let a = m // 큰 수
//     let b = n // 작은 수
//     let c = 0 // a를 b로 나눴을 때 나머지 값이 들어온다.

//     while( a % b > 0 ) {
//         c = a % b;
//         a = b; // 큰 수에 작은 수를 다시 할당
//         b = c  // 작은 수의 나머지 값 할당
//     }

//     // 최소공배수 : n과 m을 곱한 값에 최대공약수를 나눠 준 값
//     return [ b, ((n*m) / b)]
// }
